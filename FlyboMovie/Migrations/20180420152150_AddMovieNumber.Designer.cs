// <auto-generated />
using FlyboMovie.Common;
using FlyboMovie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace FlyboMovie.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180420152150_AddMovieNumber")]
    partial class AddMovieNumber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("FlyboMovie.Models.BuyOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ConfirmTime");

                    b.Property<DateTime?>("ConsumeTime");

                    b.Property<bool>("IsInactive");

                    b.Property<int>("MovieId");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.Property<int>("Status");

                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.Property<string>("ValidationCode")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("BuyOrders");
                });

            modelBuilder.Entity("FlyboMovie.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CollectedCount");

                    b.Property<string>("Description")
                        .HasMaxLength(2048);

                    b.Property<bool>("IsInactive");

                    b.Property<int>("LikedCount");

                    b.Property<string>("MovieLink1")
                        .HasMaxLength(1024);

                    b.Property<string>("MovieLink2")
                        .HasMaxLength(1024);

                    b.Property<string>("MovieLink3")
                        .HasMaxLength(1024);

                    b.Property<string>("MovieNumber")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PosterLink")
                        .HasMaxLength(1024);

                    b.Property<int>("Price");

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.Property<int?>("TrySeconds");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("FlyboMovie.Models.OrderNumberSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsInactive");

                    b.Property<string>("Prefix")
                        .HasMaxLength(10);

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.Property<int>("Seed");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("OrderNumberSettings");
                });

            modelBuilder.Entity("FlyboMovie.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsInactive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FlyboMovie.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsInactive");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Points");

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlyboMovie.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsInactive");

                    b.Property<DateTime>("RecordCreatedTime");

                    b.Property<int>("RecordCreatedUser");

                    b.Property<DateTime?>("RecordUpdatedTime");

                    b.Property<int?>("RecordUpdatedUser");

                    b.Property<int>("RoleId");

                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
